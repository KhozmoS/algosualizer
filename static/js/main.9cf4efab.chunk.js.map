{"version":3,"sources":["logo.svg","components/TopBar.tsx","components/ShortestPathNode/ShortestPathNode.tsx","components/AlgoCard.tsx","assets/shortest.png","pages/Home.tsx","pages/ShortestPathVisual.tsx","App.tsx","utilities/global.theme.ts","index.tsx","reportWebVitals.ts"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","logo","width","TopBar","classes","className","AppBar","position","Toolbar","Typography","variant","src","alt","node","height","outline","palette","secondary","main","ShortestPathNode","props","extraClass","isStart","isFinish","isWall","id","row","col","onMouseDown","onMouseDownEvent","onMouseEnter","onMouseEnterEvent","onMouseUp","onMouseUpEvent","maxWidth","media","AlgoCard","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","algoName","CardActions","to","visuaLink","style","textDecoration","Button","size","color","paper","control","padding","algos","shortestImage","docLink","Home","Box","Grid","container","map","algo","item","xs","sm","md","lg","ROWS","COLS","menu","background","primary","light","formControl","margin","minWidth","selectEmpty","marginTop","table","borderSpacing","ShortestPathVisual","React","useState","age","setAge","grid","setGrid","mouseIsDown","setMouseIsDown","handleMouseDown","console","log","updateGridSwapWall","handleMouseUp","handleMouseEnter","renderRow","index","useEffect","g","i","j","push","initGrid","FormControl","InputLabel","Select","labelId","value","onChange","event","target","label","MenuItem","cellSpacing","cellPadding","newGrid","slice","homeContainer","minHeight","home","App","path","globalTheme","createMuiTheme","teal","blue","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","onPerfEntry","undefined","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals"],"mappings":"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","file":"static/js/main.9cf4efab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from \"../logo.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  },\r\n  logo: {\r\n    width: 55,\r\n  }\r\n}));\r\n\r\nexport function TopBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>          \r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            ALGO <img className={classes.logo} src={logo} alt=\"\"/> SUALIZER\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { ShortestPathNodeProps } from \"../../models\";\r\nimport './ShortestPathNode.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  node: {\r\n    width: 25,\r\n    height: 25,\r\n    outline: `thin solid ${theme.palette.secondary.main}`,    \r\n  }\r\n}));\r\n\r\nexport function ShortestPathNode(props: ShortestPathNodeProps) {\r\n  const classes = useStyles();\r\n  const extraClass = (props.isStart ? 'node-start' : \r\n                      props.isFinish ? 'node-end' : \r\n                      props.isWall ? 'node-wall' : '');\r\n  return (\r\n    <td\r\n      id={`node-${props.row}-${props.col}`}\r\n      className={`${classes.node} ${extraClass}`}\r\n      onMouseDown={() => props.onMouseDownEvent(props.row, props.col)}\r\n      onMouseEnter={() => props.onMouseEnterEvent(props.row, props.col)}\r\n      onMouseUp={() => props.onMouseUpEvent()}\r\n    >\r\n    </td>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AlgoCardProps } from \"../models\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport function AlgoCard(props: AlgoCardProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.image}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.algoName}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Link to={props.visuaLink} style={{textDecoration: 'none'}}>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Visualize\r\n          </Button>\r\n        </Link>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/shortest.1651674e.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Box } from '@material-ui/core';\r\nimport { AlgoCard } from \"../components\";\r\nimport shortestImage from \"../assets/shortest.png\";\r\nimport { AlgoCardProps } from \"../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst algos = [\r\n  {\r\n    image: shortestImage,\r\n    algoName: \"Shortest Path\",\r\n    docLink: \"docs\",\r\n    visuaLink: \"shortest-path-visual\"\r\n  }\r\n] as AlgoCardProps[]\r\n\r\nexport function Home() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box padding={10}>\r\n      <Grid container className={classes.root} spacing={2}>\r\n        {algos.map((algo) => (\r\n          <Grid key={algo.algoName} item xs={12} sm={6} md={4} lg={3} className={classes.control}>\r\n            <AlgoCard { ...algo }/>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, FormControl, InputLabel, MenuItem, Select, Theme } from '@material-ui/core';\r\nimport { ShortestPathNodeProps } from \"../models/ShortestPathNodeProps\";\r\nimport { ShortestPathNode } from \"../components\";\r\nconst { ROWS, COLS } = { ROWS: 25, COLS: 50 } as { ROWS: number, COLS: number };\r\nconst START_ROW = 12;\r\nconst START_COL = 15;\r\nconst FINISH_ROW = 12;\r\nconst FINISH_COL = 40;\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menu: {\r\n    background: theme.palette.primary.light,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    borderSpacing: 0\r\n  }\r\n}));\r\n\r\nexport function ShortestPathVisual() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const [grid, setGrid] = React.useState([] as ShortestPathNodeProps[][]);\r\n  const [mouseIsDown, setMouseIsDown] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"HERE\");\r\n    setGrid(initGrid());\r\n  }, []);\r\n  function handleChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setAge(event.target.value as string);\r\n  };\r\n  function handleMouseDown(row: number, col: number) {\r\n    console.log(\"mouse down\");\r\n    setMouseIsDown(true);\r\n    setGrid(updateGridSwapWall(row, col, grid));\r\n  }\r\n  function handleMouseUp() {\r\n    console.log(\"mouse up\");\r\n    setMouseIsDown(false);    \r\n  }\r\n  function handleMouseEnter(row: number, col: number) {\r\n    if (!mouseIsDown) return;\r\n    setGrid(updateGridSwapWall(row, col, grid));\r\n    console.log(\"mouse enter\");\r\n  }\r\n  function renderRow(row: ShortestPathNodeProps[]) {\r\n    return row.map((props, index) => {\r\n      return (        \r\n        <ShortestPathNode\r\n          key={index}\r\n          { ...props } \r\n          onMouseDownEvent={handleMouseDown}\r\n          onMouseEnterEvent={handleMouseEnter}\r\n          onMouseUpEvent={handleMouseUp}\r\n        />         \r\n      )\r\n    })\r\n  }  \r\n  return (\r\n    <Box>\r\n      <Box className={classes.menu}>\r\n        <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">Algorithm</InputLabel>\r\n          <Select            \r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={age}\r\n            onChange={handleChange}\r\n            label=\"Algorithm\"\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            <MenuItem value={10}>Ten</MenuItem>\r\n            <MenuItem value={20}>Twenty</MenuItem>\r\n            <MenuItem value={30}>Thirty</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n      <Box>\r\n        <table cellSpacing={0} cellPadding={0} style={{margin: '20px auto'}}>\r\n          <tbody>\r\n            { grid.map((row, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  { renderRow(row) }\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </Box>\r\n    </Box>\r\n  );\r\n  \r\n}\r\n\r\n\r\nfunction initGrid() {\r\n  const g = [] as ShortestPathNodeProps[][];\r\n  for (let i = 0; i < ROWS; ++i)\r\n  {\r\n    let row = [] as ShortestPathNodeProps[];\r\n    for (let j = 0; j < COLS; ++j)\r\n    {\r\n      row.push({\r\n        row: i,\r\n        col: j,\r\n        isStart: i === START_ROW && j === START_COL,\r\n        isFinish: i === FINISH_ROW && j === FINISH_COL\r\n      } as ShortestPathNodeProps)\r\n    }\r\n    g.push(row);\r\n  }\r\n  return g;\r\n}\r\nfunction updateGridSwapWall(row: number, col: number, grid: ShortestPathNodeProps[][]) {\r\n  const newGrid = grid.slice();\r\n  if (!grid[row][col].isFinish && !grid[row][col].isStart) {\r\n    newGrid[row][col] = {\r\n      ...grid[row][col],\r\n      isWall: !grid[row][col].isWall\r\n    };\r\n  }\r\n  return newGrid;\r\n}","import React from \"react\";\nimport { TopBar } from \"./components/TopBar\";\nimport { Home, ShortestPathVisual} from \"./pages\";\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route  \n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  homeContainer: {\n    minHeight: 'calc(100vh - 64px)',\n  },\n  home: {\n    margin: 'auto',\n    width: '100%'\n  }\n}));\nfunction App() {\n  const classes = useStyles();\n  return (\n    <>\n      <TopBar />\n        <Router>\n        <Box className={classes.homeContainer}>\n        <Switch>\n          <Route path=\"/algosualizer/shortest-path-visual\">\n            <ShortestPathVisual />\n          </Route>\n          <Route path=\"/algosualizer\">\n            <Box className={classes.home}>\n              <Home />              \n            </Box>\n          </Route>          \n        </Switch>\n        </Box>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { teal, blue } from \"@material-ui/core/colors\";\r\n\r\nconst globalTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: teal[400],\r\n      light: teal[50]\r\n    },\r\n    secondary: {\r\n      main: blue[100],\r\n    },\r\n  },\r\n});\r\n\r\nexport default globalTheme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@material-ui/core';\nimport theme from \"./utilities/global.theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ReportHandler } from 'web-vitals';\n\nexport default function reportWebVitals(onPerfEntry = undefined as undefined | ReportHandler) {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\n"],"sourceRoot":""}