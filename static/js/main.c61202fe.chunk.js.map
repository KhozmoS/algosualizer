{"version":3,"sources":["components/TopBar.tsx","store/shortest-path.store.ts","components/ShortestPathNode/ShortestPathNode.tsx","components/AlgoCard.tsx","assets/shortest.png","pages/Home.tsx","utilities/algorithms/bfs.ts","pages/ShortestPathVisual.tsx","App.tsx","utilities/global.theme.ts","index.tsx","reportWebVitals.ts"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","logo","width","TopBar","classes","className","AppBar","position","Toolbar","Typography","variant","grid","Subject","gridStore","$grid","asObservable","setGrid","newGrid","next","node","height","outline","palette","secondary","main","ShortestPathNode","props","React","useState","isStart","isFinish","isWall","setIsWall","isVisited","setIsVisited","isInPath","setIsInPath","useEffect","subs","subscribe","item","row","col","unsubscribe","extraClass","id","onMouseDown","e","stopPropagation","onMouseDownEvent","onMouseEnter","onMouseEnterEvent","onMouseUp","onMouseUpEvent","maxWidth","media","AlgoCard","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","algoName","CardActions","to","visuaLink","style","textDecoration","Button","size","color","paper","control","padding","algos","shortestImage","docLink","Home","Box","Grid","container","map","algo","xs","sm","md","lg","stepX","stepY","visitedNodes","pathNodes","getEmptyBooleanArray","rows","cols","visited","i","j","push","getEmptyParentMatrix","parentMatrix","isValidMove","x","y","length","setSolutionPath","parentsMatrix","tmp","parentNode","unshift","ROWS","COLS","menu","background","primary","light","formControl","margin","minWidth","selectEmpty","marginTop","table","borderSpacing","initGrid","ShortestPathVisual","age","setAge","mouseIsDown","setMouseIsDown","handleMouseDown","handleMouseUp","handleMouseEnter","handleRunAlgo","start","end","queue","shift","nwX","nwY","RunBfs","forEach","index","setTimeout","renderRow","FormControl","InputLabel","Select","labelId","value","onChange","event","target","label","MenuItem","onClick","cellSpacing","cellPadding","g","homeContainer","minHeight","home","App","path","globalTheme","createMuiTheme","teal","blue","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","onPerfEntry","undefined","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals"],"mappings":"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","file":"static/js/main.c61202fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from \"../logo.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  },\r\n  logo: {\r\n    width: 55,\r\n  }\r\n}));\r\n\r\nexport function TopBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>          \r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            ALGOSUALIZER\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import { Subject } from 'rxjs';\r\nimport { ShortestPathNodeProps } from \"../models\";\r\nconst grid = new Subject<ShortestPathNodeProps[][]>();\r\n\r\nexport const gridStore = {\r\n  $grid: grid.asObservable(),\r\n  setGrid: (newGrid: ShortestPathNodeProps[][]) => grid.next(newGrid)\r\n}","import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { ShortestPathNodeProps } from \"../../models\";\r\nimport { gridStore } from \"../../store\";\r\nimport './ShortestPathNode.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  node: {\r\n    width: 25,\r\n    height: 25,\r\n    outline: `thin solid ${theme.palette.secondary.main}`,    \r\n  }\r\n}));\r\n\r\nexport function ShortestPathNode(props: ShortestPathNodeProps) {\r\n  const [isStart, ] = React.useState(props.isStart);\r\n  const [isFinish, ] = React.useState(props.isFinish);\r\n  const [isWall, setIsWall] = React.useState(props.isWall);\r\n  const [isVisited, setIsVisited] = React.useState(props.isVisited);\r\n  const [isInPath, setIsInPath] = React.useState(props.isInPath);\r\n\r\n  React.useEffect(() => {\r\n    const subs = gridStore.$grid.subscribe((item) => {\r\n      if (item) {\r\n        setIsWall(item[props.row][props.col].isWall);\r\n        setIsVisited(item[props.row][props.col].isVisited);\r\n        setIsInPath(item[props.row][props.col].isInPath);\r\n      }\r\n    });\r\n    return () => {\r\n      if (subs)\r\n        subs.unsubscribe();\r\n    };\r\n  })\r\n\r\n\r\n  const classes = useStyles();\r\n  const extraClass = (isStart ? 'node-start' : \r\n                      isFinish ? 'node-end' : \r\n                      isWall ? 'node-wall' : \r\n                      isVisited ? 'node-visited' : \r\n                      isInPath ? 'node-solution' : '');\r\n  return (\r\n    <td      \r\n      id={`node-${props.row}-${props.col}`}\r\n      className={`${classes.node} ${extraClass}`}\r\n      onMouseDown={(e) => { e.stopPropagation(); props.onMouseDownEvent(props.row, props.col); }}\r\n      onMouseEnter={(e) => { e.stopPropagation(); props.onMouseEnterEvent(props.row, props.col); }}\r\n      onMouseUp={() => props.onMouseUpEvent()}\r\n    >\r\n    </td>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AlgoCardProps } from \"../models\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport function AlgoCard(props: AlgoCardProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.image}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.algoName}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Link to={props.visuaLink} style={{textDecoration: 'none'}}>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Visualize\r\n          </Button>\r\n        </Link>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/shortest.1651674e.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Box } from '@material-ui/core';\r\nimport { AlgoCard } from \"../components\";\r\nimport shortestImage from \"../assets/shortest.png\";\r\nimport { AlgoCardProps } from \"../models\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst algos = [\r\n  {\r\n    image: shortestImage,\r\n    algoName: \"Shortest Path\",\r\n    docLink: \"docs\",\r\n    visuaLink: \"shortest-path-visual\"\r\n  }\r\n] as AlgoCardProps[]\r\n\r\nexport function Home() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box padding={10}>\r\n      <Grid container className={classes.root} spacing={2}>\r\n        {algos.map((algo) => (\r\n          <Grid key={algo.algoName} item xs={12} sm={6} md={4} lg={3} className={classes.control}>\r\n            <AlgoCard { ...algo }/>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}","import { ShortestPathNodeProps } from \"../../models\";\r\n\r\nconst stepX = [0, 1, 0, -1];\r\nconst stepY = [1, 0, -1, 0];\r\n\r\nexport let visitedNodes = [] as ShortestPathNodeProps[];\r\nexport let pathNodes = [] as ShortestPathNodeProps[];\r\ntype Point = { x: number, y: number };\r\n\r\nexport function RunBfs(grid:ShortestPathNodeProps[][], start: Point, end: Point) {\r\n  visitedNodes = [];\r\n  pathNodes = [];\r\n  const visited = getEmptyBooleanArray(grid.length, grid[0].length);\r\n  const parentsMatrix = getEmptyParentMatrix(grid.length, grid[0].length);\r\n  const queue = [] as ShortestPathNodeProps[];\r\n\r\n  queue.push(grid[start.x][start.y]);  \r\n  visited[start.x][start.y] = true;\r\n  while(queue.length > 0) {\r\n    const node = queue.shift() as ShortestPathNodeProps;    \r\n    for (let i = 0; i < 4; i++) {\r\n      const nwX = node.row + stepX[i];\r\n      const nwY = node.col + stepY[i];\r\n      if (isValidMove(nwX, nwY, grid, visited)) {\r\n        queue.push(grid[nwX][nwY]);\r\n        visited[nwX][nwY] = true;\r\n        // WE DONT INCLUDE START NODE IN PARENT MATRIX\r\n        parentsMatrix[nwX][nwY] = (node.row === start.x && node.col === start.y ? null : node);\r\n        if (nwX === end.x && nwY === end.y) {\r\n          setSolutionPath(parentsMatrix, end);\r\n          return;\r\n        }\r\n        visitedNodes.push(grid[nwX][nwY]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst getEmptyBooleanArray = (rows: number, cols: number) => {\r\n  const visited = [] as boolean[][];\r\n  for (let i = 0; i < rows; i++) {\r\n    let row = [] as boolean[];\r\n    for (let j = 0; j < cols; j++) {\r\n      row.push(false);\r\n    }\r\n    visited.push(row);\r\n  }\r\n  return visited;\r\n}\r\nconst getEmptyParentMatrix = (rows: number, cols: number) => {\r\n  const parentMatrix = [] as (ShortestPathNodeProps| null)[][];\r\n  for (let i = 0; i < rows; i++) {\r\n    let row = [] as (ShortestPathNodeProps | null)[];\r\n    for (let j = 0; j < cols; j++) {\r\n      row.push(null);\r\n    }\r\n    parentMatrix.push(row);\r\n  }\r\n  return parentMatrix;\r\n}\r\nconst isValidMove = (\r\n    x: number, \r\n    y: number, \r\n    grid: ShortestPathNodeProps[][],\r\n    visited: boolean[][]\r\n  ): boolean => {\r\n  if (x < 0 || y < 0 || x >= grid.length || y >= grid[0].length) return false;\r\n  if (visited[x][y]) return false;  \r\n  if (grid[x][y].isWall) return false;\r\n  \r\n  return true;\r\n}\r\nconst setSolutionPath = (parentsMatrix: (ShortestPathNodeProps| null)[][], tmp: Point) => {  \r\n  while(parentsMatrix[tmp.x][tmp.y] !== null) {\r\n    const parentNode = parentsMatrix[tmp.x][tmp.y] as ShortestPathNodeProps;\r\n    pathNodes.unshift(parentNode);\r\n    tmp.x = parentNode.row as number;\r\n    tmp.y = parentNode.col as number;\r\n  }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Button, FormControl, InputLabel, MenuItem, Select, Theme } from '@material-ui/core';\r\nimport { ShortestPathNodeProps } from \"../models/ShortestPathNodeProps\";\r\nimport { ShortestPathNode } from \"../components\";\r\nimport { RunBfs, visitedNodes, pathNodes } from \"../utilities/algorithms/bfs\";\r\nimport { gridStore } from \"../store\";\r\nconst { ROWS, COLS } = { ROWS: 25, COLS: 50 } as { ROWS: number, COLS: number };\r\nconst START_ROW = 12;\r\nconst START_COL = 10;\r\nconst FINISH_ROW = 12;\r\nconst FINISH_COL = 40;\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menu: {\r\n    background: theme.palette.primary.light,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    borderSpacing: 0\r\n  }\r\n}));\r\nlet grid = initGrid() as ShortestPathNodeProps[][];\r\nexport function ShortestPathVisual() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');  \r\n  const [mouseIsDown, setMouseIsDown] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    grid = initGrid();\r\n    gridStore.setGrid(grid);\r\n    return () => {\r\n      gridStore.setGrid(initGrid());\r\n    }\r\n  }, []);\r\n  function handleChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setAge(event.target.value as string);\r\n  };\r\n  function handleMouseDown(row: number, col: number) {\r\n    setMouseIsDown(true);\r\n    grid[row][col].isWall = true;\r\n    gridStore.setGrid(grid);\r\n  }\r\n  function handleMouseUp() {\r\n    setMouseIsDown(false);\r\n  }\r\n  function handleMouseEnter(row: number, col: number) {\r\n    if (!mouseIsDown) return;\r\n    grid[row][col].isWall = true;\r\n    gridStore.setGrid(grid);\r\n  }\r\n  function handleRunAlgo() {\r\n    RunBfs(grid, { x: START_ROW, y: START_COL }, { x: FINISH_ROW, y: FINISH_COL });\r\n    visitedNodes.forEach((node, index) => {      \r\n      setTimeout(() => { \r\n        grid[node.row][node.col].isWall = false;\r\n        grid[node.row][node.col].isVisited = true;\r\n        gridStore.setGrid(grid);\r\n        if (index+1 === visitedNodes.length) {\r\n          paintSolutionPath(pathNodes);\r\n        }\r\n      }, index*10);\r\n    });\r\n  }\r\n  function renderRow(row: ShortestPathNodeProps[]) {\r\n    return row.map((props, index) => {\r\n      return (        \r\n        <ShortestPathNode\r\n          key={index}\r\n          { ...props } \r\n          onMouseDownEvent={handleMouseDown}\r\n          onMouseEnterEvent={handleMouseEnter}\r\n          onMouseUpEvent={handleMouseUp}\r\n        />         \r\n      )\r\n    })\r\n  }  \r\n  return (\r\n    <Box>\r\n      <Box className={classes.menu}>\r\n        <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">Algorithm</InputLabel>\r\n          <Select            \r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={age}\r\n            onChange={handleChange}\r\n            label=\"Algorithm\"\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            <MenuItem value={10}>Ten</MenuItem>\r\n            <MenuItem value={20}>Twenty</MenuItem>\r\n            <MenuItem value={30}>Thirty</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n      <Box>\r\n        <Box textAlign=\"center\" padding={2}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => handleRunAlgo()}>\r\n            Start BFS\r\n          </Button>\r\n        </Box>\r\n        <table cellSpacing={0} cellPadding={0} style={{margin: '20px auto'}}>\r\n          <tbody>\r\n            { grid.map((row, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  { renderRow(row) }\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>                                    \r\n      </Box>\r\n    </Box>\r\n  );\r\n  \r\n}\r\n\r\n\r\nfunction initGrid() {\r\n  const g = [] as ShortestPathNodeProps[][];\r\n  for (let i = 0; i < ROWS; ++i)\r\n  {\r\n    let row = [] as ShortestPathNodeProps[];\r\n    for (let j = 0; j < COLS; ++j)\r\n    {\r\n      row.push({\r\n        row: i,\r\n        col: j,\r\n        isStart: i === START_ROW && j === START_COL,\r\n        isFinish: i === FINISH_ROW && j === FINISH_COL\r\n      } as ShortestPathNodeProps)\r\n    }\r\n    g.push(row);\r\n  }\r\n  return g;\r\n}\r\n\r\nfunction paintSolutionPath(path: ShortestPathNodeProps[]) {\r\n  path.forEach((node, index) => {    \r\n    setTimeout(() => {\r\n      grid[node.row][node.col].isVisited = false;\r\n      grid[node.row][node.col].isWall = false;\r\n      grid[node.row][node.col].isInPath = true;\r\n      gridStore.setGrid(grid);\r\n    }, index*10)    \r\n  });\r\n}","import React from \"react\";\nimport { TopBar } from \"./components/TopBar\";\nimport { Home, ShortestPathVisual} from \"./pages\";\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route  \n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  homeContainer: {\n    minHeight: 'calc(100vh - 64px)',\n  },\n  home: {\n    margin: 'auto',\n    width: '100%'\n  }\n}));\nfunction App() {\n  const classes = useStyles();\n  return (\n    <>\n      <TopBar />\n      <Router>\n        <Box className={classes.homeContainer}>\n        <Switch>\n          <Route path=\"/algosualizer/shortest-path-visual\">\n            <ShortestPathVisual />\n          </Route>\n          <Route path=\"/algosualizer\">\n            <Box className={classes.home}>\n              <Home />              \n            </Box>\n          </Route>          \n        </Switch>\n        </Box>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { teal, blue } from \"@material-ui/core/colors\";\r\n\r\nconst globalTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: teal[400],\r\n      light: teal[50]\r\n    },\r\n    secondary: {\r\n      main: blue[100],\r\n    },\r\n  },\r\n});\r\n\r\nexport default globalTheme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@material-ui/core';\nimport theme from \"./utilities/global.theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ReportHandler } from 'web-vitals';\n\nexport default function reportWebVitals(onPerfEntry = undefined as undefined | ReportHandler) {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\n"],"sourceRoot":""}